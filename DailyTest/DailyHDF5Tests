#! /bin/sh
# Submit daily tests of HDF5 base software
# Usauge: DailyHDFTests [-r<version>]
# Example: DailyHDFTests	# test the CVS current version
#	   DailyHDFTests -r1.2	# test version 1.2
#	   DailyHDFTests -r1.4	# test version 1.4

# general setup
PROGRAMNAME=`basename $0`
DEBUGMODE=""		# change to -debug for debug mode

# Setup
HOSTNAME=`hostname | cut -f1 -d.`       # no domain part
TODAY=`date +%y%m%d`
H5VER=			# default to current CVS version
H5VERSTR=		# default to current CVS version
errcode=0		# error code so far

# Parse command options
while [ $# -gt 0 ]; do
    case "$1" in
	-r*)
	    H5VER="$1"
	    H5VERSTR=_`echo $H5VER | sed -e s/-r// -e s/\\\./_/g`
	    ;;
	-debug*)
	    DEBUGMODE="$1"
	    ;;
	*)
	    echo "Unknown option ($1)"
	    exit 1
	    ;;
    esac
    shift
done

# If in debug mode, email output to myself; else to the "group".
if [ -n "$DEBUGMODE" ]; then
    echo "******** DEBUGMODE is $DEBUGMODE ************"
    TOWHOM=acheng
else
    TOWHOM=hdf5cvs@ncsa.uiuc.edu
fi

# Setup test directories
LOGDIR=$HOME/snapshots-hdf5${H5VERSTR}/log
LOGDIRLOCK=${LOGDIR}/.lock
LOGFILE=${LOGDIR}/${PROGRAMNAME}-${HOSTNAME}_${TODAY}
FAILEDLOG=${LOGDIR}/FAILED_LOG_${TODAY}
FAILEDLOG_REPORTED=${LOGDIR}/FAILED_LOG_REPORTED_${TODAY}
SNAPSHOTLOG=${LOGDIR}/SNAPSHOT_LOG_${TODAY}
RELEASE_ASAP=${LOGDIR}/../release_asap		# make a special release asap
RELEASE_NOT=${LOGDIR}/../release_not		# Do not release
RELEASED=${LOGDIR}/RELEASED_${TODAY}
CMD="bin/runtest $DEBUGMODE ${H5VER}"

# Setup Mailing command and Report title
if [ $HOSTNAME = gondolin ]; then
    MAIL=Mail
    TEST_TITLE="$HOSTNAME HDF5${H5VERSTR}_Daily_Tests"
else
    MAIL=mail
    TEST_TITLE="HDF5${H5VERSTR}_Daily_Tests"
fi

# set up auto-cleanup
trap "rm -f $LOGDIRLOCK" 0

if [ $HOSTNAME != gondolin ]; then
# Clean up LOGDIR by moving all files that are not "of today"
# to OLD.
(   
    cd $LOGDIR
    oldfiles=`find * -type d -prune -o -type f ! -name '*'$TODAY -print`
    test -n "$oldfiles" && mv $oldfiles OLD/.
)
fi

if [ -f $LOGFILE ]; then
    if [ -n "$DEBUGMODE" ]; then
	echo "$LOGFILE exists.  No more daily tests today"
    fi
    exit 1
fi

#
if [ -n "$DEBUGMODE" ]; then
    echo "launching runsnap ..."
fi

# setup from which version of source to launch test
if [ -z "$H5VERSTR" ]; then
    H5SRC_VER=current
else
    H5SRC_VER=v$H5VERSTR
fi

echo going $H5SRC_VER to run CMD=$CMD
if [ $HOSTNAME != gondolin ]; then
    (cd $HOME/HDF5/${H5SRC_VER}/hdf5; $CMD -all) > $LOGFILE 2>&1
else
    (cd $HOME/HDF5/${H5SRC_VER}/hdf5; $CMD ) > $LOGFILE 2>&1
fi

# Check result
if [ -f $FAILEDLOG ]; then
    errcode=1
fi
    
# report result
if [ $errcode -eq 0 ]; then
    (echo "No failures reported"
     echo ""
     echo "============================="
     echo "   All Tests Results"
     echo "============================="
     cat $LOGFILE) |
    $MAIL -s "$TEST_TITLE" $TOWHOM
else
    # some hosts have failed the tests
    ( cat $FAILEDLOG
     echo ""
     echo "============================="
     echo "   All Tests Results"
     echo "============================="
     cat $LOGFILE) |
    $MAIL -s "${TEST_TITLE}_FAILED!!!" $TOWHOM
    # Save FAILEDLOG in FAILEDLOG_REPORTED.
    # Remove FAILEDLOG for possible new daily tests.
    cat $FAILEDLOG >> $FAILEDLOG_REPORTED
    rm $FAILEDLOG
fi

if [ $HOSTNAME != gondolin ]; then
# do a snapshot release if
#   test-succeeded && 
#   release-not-is-not-present &&
#   ( today-is-saturday || release-asap-is-requested )
if [ $errcode -eq 0 -a \
    ! -f $RELEASE_NOT -a \
    \( `date +%w` -eq 6 -o -f $RELEASE_ASAP \) ]; then
    # do a snapshot.  Default to version 1.3
    H5DIR=$HOME/HDF5/v${H5VERSTR:-_1_3}/hdf5
    if [ -f $RELEASE_ASAP ]; then
	RELEASE_MESG="Special snapshot release launched for HDF5${H5VERSTR}."
    else
	RELEASE_MESG="Weekly snapshot release launched for HDF5${H5VERSTR}."
    fi
    (
	cd $H5DIR
	bin/snapshot
    ) >> $SNAPSHOTLOG 2>&1
    errcode=$?

    # if snapshot went okay, remove release-asap-request
    if [ $errcode -eq 0 ]; then
	if [ -f $RELEASE_ASAP ]; then
	    mv $RELEASE_ASAP $RELEASED
	else
	    touch $RELEASED
	fi
    fi

    # report snapshot result
    (
     echo $RELEASE_MESG
     echo "Exit Error Code = ${errcode}."
     echo "Complete output is stored in"
     echo "    $SNAPSHOTLOG"
    ) |
    mail -s "HDF5${H5VERSTR}_snapshot" $TOWHOM
fi
fi


# final exit
exit $errcode
