#! /bin/sh
# Cleanup the Daily Test space
# Usauge: DailyHDFTests [-r<version>]
# Example: DailyHDFTests	# test the CVS current version
#	   DailyHDFTests -r1.x	# test version 1.x

# general setup
PROGRAMNAME=`basename $0`
DEBUGMODE=""		# change to -debug for debug mode

# Setup
HOSTNAME=`hostname | cut -f1 -d.`       # no domain part
TODAY=`date +%y%m%d`
H5VER=			# default to current CVS version
H5VERSTR=		# default to current CVS version
TITLE="HDF5 Tests on $TODAY"
errcode=0		# error code so far
CMD=			# What command to run

# Parse command options
while [ $# -gt 0 ]; do
    case "$1" in
	-r*)
	    H5VER="$1"
	    H5VERSTR=_`echo $H5VER | sed -e s/-r// -e s/\\\./_/g`
	    ;;
	-debug*)
	    DEBUGMODE="$1"
	    ;;
	clean)
	    CMD=clean
	    ;;
	report)
	    CMD=report
	    ;;
	launch)
	    CMD=launch
	    ;;
	*)
	    echo "Unknown option ($1)"
	    exit 1
	    ;;
    esac
    shift
done

# Mail addresses for reports
# TOWHOM_PASSED--normal report
# TOWHOM_FAILED--Failure Report
# If in debug mode, email output to myself; else to the "group".
if [ -n "$DEBUGMODE" ]; then
    echo "******** DEBUGMODE is $DEBUGMODE ************"
    TOWHOM_PASSED=acheng@ncsa.uiuc.edu
    TOWHOM_FAILED=acheng@ncsa.uiuc.edu
else
    TOWHOM_PASSED=acheng@ncsa.uiuc.edu
    TOWHOM_FAILED=acheng@ncsa.uiuc.edu
fi

# Setup test directories
LOGDIR=$HOME/snapshots-hdf5${H5VERSTR}/log
LOGDIRLOCK=${LOGDIR}/.lock-${HOSTNAME}
LOGFILE=${LOGDIR}/${PROGRAMNAME}-${HOSTNAME}_${TODAY}
FAILEDLOG=${LOGDIR}/FAILED_LOG_${TODAY}
PASSEDLOG=${LOGDIR}/PASSED_LOG_${TODAY}
SKIPPEDLOG=${LOGDIR}/SKIPPED_LOG_${TODAY}
TIMELOG=${LOGDIR}/TIME_LOG_${TODAY}
REPORTED=${LOGDIR}/REPORTED_${TODAY}
SNAPSHOTLOG=${LOGDIR}/SNAPSHOT_LOG_${TODAY}
RELEASE_ASAP=${LOGDIR}/../release_asap		# make a special release asap
RELEASE_NOT=${LOGDIR}/../release_not		# Do not release
RELEASED=${LOGDIR}/RELEASED_${TODAY}
WATCHERFILE=${LOGDIR}/../watchers		# List of platform watchers

# Setup Mailing command and Report title
MAIL=Mail
TEST_TITLE="$HOSTNAME HDF5${H5VERSTR}_Daily_Tests"

# set up auto-cleanup
trap "rm -f $LOGDIRLOCK" 0
trap "rm -f $LOGDIRLOCK" 1 2 3 4 5 6 7 8 9 10 12 13 14 15

# Execute the command.
case "$CMD" in
    clean)
	# Clean up LOGDIR by moving all files that are not "of today"
	# to OLD.
	# Clean up files older than 10 days in OLD.
	(   
	    cd $LOGDIR
	    oldfiles=`find * -type d -prune -o -type f ! -name '*'$TODAY'*' -print`
	    test -n "$oldfiles" && mv $oldfiles OLD/.
	    find OLD -mtime +21 -exec rm '{}' \;
	)
	;;
    report)
	# gather up the test results and report it.
	# report result
	# save FAILED or SUCCEESS in REPORTED and remove them
	# Check result
	if [ -f $FAILEDLOG ]; then
	    errcode=1
	    REPORT_TITLE="${TEST_TITLE}_FAILED!!!"
	    TOWHOM=$TOWHOM_FAILED
	else
	    REPORT_TITLE="${TEST_TITLE}"
	    TOWHOM=$TOWHOM_PASSED
	fi
				

	(
	 echo "*** $TITLE $TODAY***"
	 echo "============================="
	 echo "   Tests Summary"
	 echo "============================="
	 if [ -f $FAILEDLOG ]; then
	    sort $FAILEDLOG | tee -a $REPORTED
	    echo ""
	    rm $FAILEDLOG
	 fi
	 if [ -f $SKIPPEDLOG ]; then
	    sort $SKIPPEDLOG | tee -a $REPORTED
	    echo ""
	    rm $SKIPPEDLOG
	 fi
	 if [ -f $PASSEDLOG ]; then
	    sort $PASSEDLOG | tee -a $REPORTED
	    rm $PASSEDLOG
	 fi
	 echo ""
	 echo "============================="
	 echo "   Tests Time Summary"
	 echo "============================="
	 if [ -f $TIMELOG ]; then
	    cat $TIMELOG | tee -a $REPORTED
	    rm $TIMELOG
	 fi
	 echo ""
	) | $MAIL -s "$REPORT_TITLE" $TOWHOM
	;;
    launch)
	LAUNCH_CMD=JOBS/Dailytest
	RemoteHosts="lambda theta"
	# launch myself
	$LAUNCH_CMD
	# launch remote hosts
	for h in $RemoteHosts; do
	    ssh $h $LAUNCH_CMD < /dev/null
	done
	;;
    *)
	echo "Unknown Command ($CMD)"
	exit 1
	;;
esac

if [ -f $LOGFILE ]; then
    if [ -n "$DEBUGMODE" ]; then
	echo "$LOGFILE exists.  No more daily tests today"
    fi
    exit 1
fi

#
if [ -n "$DEBUGMODE" ]; then
    echo "launching runsnap ..."
fi

# setup from which version of source to launch test
if [ -z "$H5VERSTR" ]; then
    H5SRC_VER=current
else
    H5SRC_VER=v$H5VERSTR
fi

# final exit
exit $errcode
